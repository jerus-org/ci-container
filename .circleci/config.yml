version: 2.1

parameters:
  min-rust-version:
    type: string
    default: "1.60"

executors:
  ubuntu:
    docker:
      - image: cimg/base:2024.06
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

commands:
  make-test:
    parameters:
      rust-min-version:
        default: "1.56"
        type: string
    steps:
      - run:
          name: make test for minimum version <<parameters.rust-min-version>>
          command: |
            REPO=jerusdp/ci-rust
            TAG=<<parameters.rust-min-version>>
            docker build --build-arg MIN_RUST_VERSION=<<parameters.rust-min-version>> -t ${REPO}/test:${TAG} --target test .
            docker run --rm ${REPO}/test:${TAG}

  make-publish:
    parameters:
      rust-min-version:
        default: "1.56"
        type: string
    steps:
      - run:
          name: Publish for minimum version <<parameters.rust-min-version>>
          command: |
            REPO=jerusdp/ci-rust
            TAG=<<parameters.rust-min-version>>
            INPUT_RELEASE_VERSION=0.1.0
            docker build --build-arg MIN_RUST_VERSION=<<parameters.rust-min-version>> -t ${REPO}:${TAG} --target final .
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push ${REPO}:${TAG}

  gpg-key:
    steps:    
      - run:
          name: import GPG key
          command: |
            echo -e $BOT_GPG_KEY \
              | base64 --decode --ignore-garbage \
              | gpg --batch --allow-secret-key-import --import 
            gpg --fingerprint
            echo $BOT_TRUST | gpg --import-ownertrust
            gpg --fingerprint

  git-config:
    steps:
      - run:
          name: Configure git for user and signing
          command: |
            git config --global user.email "$BOT_USER_EMAIL"
            git config --global user.name "$BOT_USER_NAME"
            git config --global gpg.program gpg
            git config --global user.signingkey "$BOT_SIGN_KEY"
            git config --global commit.gpgsign true

jobs:
  test:
    parameters:
      min-rust-version:
        type: string
    executor: ubuntu
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: default
      - make-test:
          rust-min-version: << parameters.min-rust-version >>


  publish:
    parameters:
      min-rust-version:
        type: string
    executor: ubuntu
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.14
      - make-publish:
          rust-min-version: << parameters.min-rust-version >>

  pr-changelog-update:
    executor: ubuntu
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: 
            - SHA256:OkxsH8Z6Iim6WDJBaII9eTT9aaO1f3eDc6IpsgYYPVg
      - run:
          name: Remove original SSH key from agent 
          command: |
            ssh-add -l
            ssh-add -d ~/.ssh/id_rsa.pub
            ssh-add -l
      - gpg-key
      - git-config
      - run:
          name: Install pcu
          command: |
            wget https://github.com/jerus-org/pcu/releases/download/v0.1.2/pcu
            chmod +x pcu
      - run:
          name: Update changelog
          command: |
            ./pcu -vv

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test-only:
    jobs:
      - test:
          filters:
            branches:
              ignore: main
          matrix: &matrix
            parameters:
              min-rust-version: ["1.61", "1.65", "1.71", "1.72", "1.73", "1.74", "1.75"]
      
      - pr-changelog-update:
          requires:
            - test
          context:
            - release  
  publish-only:
    jobs:
      - publish:
          filters:
            branches:
              only: main
          matrix:
            <<: *matrix
